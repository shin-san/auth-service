
management:
  endpoint:
    health:
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  server:
    port: 9090

spring:
  datasource:
    hikari: ## default connection pool
      connectionTimeout: 20000
      maximumPoolSize: 5
    ## PostgreSQL
    url: jdbc:postgresql://${POSTGRES_URL:localhost}:5432/postgres
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:passw0rd}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  security:
    oauth2:
      client:
        registration:
          okta:
            client-id: ${OKTA_CLIENT_ID}
            client-secret: ${OKTA_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: ${OKTA_CLIENT_SCOPE}
        provider:
          okta:
            token-uri: https://dev-79580021.okta.com/oauth2/ausa8khazhLhrqATr5d7/v1/token
server:
  port: 8443
  ssl:
    client-auth: want
    enabled: true
    key-store: ${KEYSTORE_LOCATION}
    key-store-password: ${KEYSTORE_PASSWORD}
    key-alias: ${KEYSTORE_ALIAS}
    trust-store: ${TRUSTSTORE_LOCATION}
    trust-store-password: ${TRUSTSTORE_PASSWORD}

logging:
  level:
    org:
      springframework: INFO